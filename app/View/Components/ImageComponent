<?php

namespace App\View\Components;

use Roots\Acorn\View\Component;

class ImageComponent extends Component
{

    protected $imageId;

    public $imageElement;

    public $breakpoints = [];

    public function __construct($imageId = null, $breakpoints = [])
    {
        $this->imageId = $imageId;
        $this->breakpoints = $breakpoints;
        $this->imageElement = $this->prepareImageData($this->imageId, $this->breakpoints);
    }

    public function render()
    {
        return view('components.image');
    }

    public function prepareImageData($imageId, $breakpoints): array
    {
        $imageUrl = wp_get_attachment_url($imageId);
        $metadata = wp_get_attachment_metadata($imageId);
        $uploadDir = wp_upload_dir();
        $baseDir = $uploadDir['basedir'];
        $baseUrl = $uploadDir['baseurl'];

        $sources = [];

        foreach ($breakpoints as $breakpoint) {
            $size = $metadata['sizes'][$breakpoint] ?? null;
            // $sources[] = $metadata['sizes'];

            if ($size) {
                $imagePath = $baseDir . '/' . $size['file'];
                $webpPath = str_replace(['.jpg', '.jpeg', '.png'], '.webp', $imagePath);

                $src = file_exists($webpPath)
                    ? str_replace($baseDir, $baseUrl, $webpPath)
                    : $baseUrl . '/' . $size['file'];

                $sources[] = [
                    'src' => $webpPath,
                    'media' => "(min-width: {$breakpoint}px)",
                ];
            }
        }

        return [
            'imageUrl' => $imageUrl,
            'sources' => $sources,
        ];
    }
}
